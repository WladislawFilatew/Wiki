{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fill2\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442 Wiki\\\\Wiki\\\\client\\\\src\\\\pages\\\\WikiRedact.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from \"react\";\nimport parse from 'html-react-parser';\nimport { Button, Card, Form, ToggleButton, ToggleButtonGroup } from \"react-bootstrap\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { Context } from '../index';\nimport { WIKIS_ROUTER } from \"../utils/consts\";\nimport { changeText } from \"../http/textAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RenderText = ({\n  str\n}) => {\n  return parse(str);\n};\n_c = RenderText;\nconst WikiRedact = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    text\n  } = useContext(Context);\n  const navigator = useNavigate();\n  const RedactState = text.texts.find(OneText => OneText.id == id);\n  const [isRedact, setIsRedact] = useState(true);\n  let [title, setTitle] = useState(RedactState.state.title);\n  let [redactText, setRedactText] = useState(RedactState.state.text);\n  const save = () => {\n    // RedactState.state.setTitle(title);\n    // RedactState.state.setText(redactText);\n    changeText({\n      id: text.id,\n      title: title,\n      text: text\n    }).then(data => {\n      navigator(WIKIS_ROUTER);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      borderRadius: 20,\n      margin: '0px 200px 0px 200px',\n      borderWidth: '5px'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex\",\n        style: {\n          marginBottom: 25\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: 25,\n            fontSize: 25,\n            fontWeight: \"lighter\"\n          },\n          children: isRedact ? /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [title, \": \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(Form.Control, {\n            value: title,\n            onChange: e => setTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: \"auto\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline-success\",\n            style: {\n              marginRight: 10\n            },\n            onClick: () => save(),\n            children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n            type: \"radio\",\n            name: \"options\",\n            defaultValue: 1,\n            children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n              variant: \"outline-dark\",\n              id: \"tbg-radio-1\",\n              value: 1,\n              onClick: () => setIsRedact(true),\n              children: \"\\u041F\\u0440\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n              variant: \"outline-dark\",\n              id: \"tbg-radio-2\",\n              value: 2,\n              onClick: () => setIsRedact(false),\n              children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), isRedact ? /*#__PURE__*/_jsxDEV(RenderText, {\n        str: redactText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Form.Control, {\n        value: redactText,\n        onChange: e => setRedactText(e.target.value),\n        as: \"textarea\",\n        rows: 30\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(WikiRedact, \"1DgH61BmPYx5okn9UfFYbMcuk90=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c2 = WikiRedact;\nexport default WikiRedact;\nvar _c, _c2;\n$RefreshReg$(_c, \"RenderText\");\n$RefreshReg$(_c2, \"WikiRedact\");","map":{"version":3,"names":["React","useState","useContext","parse","Button","Card","Form","ToggleButton","ToggleButtonGroup","useParams","useNavigate","Context","WIKIS_ROUTER","changeText","jsxDEV","_jsxDEV","RenderText","str","_c","WikiRedact","_s","id","text","navigator","RedactState","texts","find","OneText","isRedact","setIsRedact","title","setTitle","state","redactText","setRedactText","save","then","data","style","borderRadius","margin","borderWidth","children","className","marginBottom","marginLeft","fontSize","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","Control","value","onChange","e","target","variant","marginRight","onClick","type","name","defaultValue","as","rows","_c2","$RefreshReg$"],"sources":["C:/Users/fill2/OneDrive/Рабочий стол/Проект Wiki/Wiki/client/src/pages/WikiRedact.js"],"sourcesContent":["import React, { useState , useContext}  from \"react\";\r\nimport parse from 'html-react-parser';\r\nimport { Button, Card, Form, ToggleButton, ToggleButtonGroup  } from \"react-bootstrap\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport {Context} from '../index';\r\nimport { WIKIS_ROUTER } from \"../utils/consts\";\r\nimport { changeText } from \"../http/textAPI\";\r\n\r\n\r\nconst RenderText = ({str}) =>{\r\n    return(\r\n        parse(str)\r\n    )\r\n}\r\n\r\n\r\nconst WikiRedact  = () => {\r\n    const {id} = useParams();\r\n    const {text} = useContext(Context);\r\n    const navigator = useNavigate()\r\n\r\n    const RedactState = text.texts.find(OneText => OneText.id == id);\r\n   \r\n    const [isRedact, setIsRedact] = useState(true)\r\n    let [title, setTitle] = useState(RedactState.state.title)\r\n    let [redactText, setRedactText] = useState(RedactState.state.text)\r\n    \r\n    const save = () =>{\r\n        // RedactState.state.setTitle(title);\r\n        // RedactState.state.setText(redactText);\r\n        changeText({id: text.id ,title: title, text: text}).then(data=> {\r\n            navigator(WIKIS_ROUTER)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Card\r\n            style={{borderRadius: 20, margin: '0px 200px 0px 200px', borderWidth: '5px'}}\r\n        >\r\n            <div style={{margin: 20}}>\r\n                <div className=\"d-flex\" style={{marginBottom: 25}}>\r\n                    <div \r\n                        style={{marginLeft: 25, fontSize: 25, fontWeight: \"lighter\"}}\r\n                    >\r\n                        {isRedact?\r\n                            <b>{title}: </b>\r\n                        :\r\n                            <Form.Control\r\n                                value={title}\r\n                                onChange={e => setTitle(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        }   \r\n                    </div>\r\n                    <div style={{marginLeft: \"auto\"}}>\r\n                        <Button \r\n                            variant=\"outline-success\" \r\n                            style={{marginRight: 10}}\r\n                            onClick={() => save()}\r\n                        >\r\n                            Сохранить\r\n                        </Button>\r\n                        <ToggleButtonGroup  type=\"radio\" name=\"options\" defaultValue={1}>\r\n                            <ToggleButton\r\n                                variant=\"outline-dark\"\r\n                                id=\"tbg-radio-1\"\r\n                                value={1}\r\n                                onClick = {()=> setIsRedact(true)}\r\n                            >\r\n                                Просмотр\r\n                            </ToggleButton>\r\n                            <ToggleButton \r\n                                variant=\"outline-dark\"\r\n                                id=\"tbg-radio-2\"\r\n                                value={2}\r\n                                onClick = {()=> setIsRedact(false)}\r\n                            >\r\n                                Редактировать\r\n                            </ToggleButton>\r\n                        </ToggleButtonGroup>\r\n                    </div>\r\n                </div>\r\n                {isRedact?\r\n                    <RenderText str={redactText}/>\r\n                    :\r\n                    <Form.Control\r\n                        value={redactText}\r\n                        onChange={e => setRedactText(e.target.value)}\r\n                        as=\"textarea\" \r\n                        rows={30}\r\n                    />\r\n                }   \r\n            </div>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default WikiRedact;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAGC,UAAU,QAAQ,OAAO;AACpD,OAAOC,KAAK,MAAM,mBAAmB;AACrC,SAASC,MAAM,EAAEC,IAAI,EAAEC,IAAI,EAAEC,YAAY,EAAEC,iBAAiB,QAAS,iBAAiB;AACtF,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,SAAQC,OAAO,QAAO,UAAU;AAChC,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,UAAU,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG7C,MAAMC,UAAU,GAAGA,CAAC;EAACC;AAAG,CAAC,KAAI;EACzB,OACId,KAAK,CAACc,GAAG,CAAC;AAElB,CAAC;AAAAC,EAAA,GAJKF,UAAU;AAOhB,MAAMG,UAAU,GAAIA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IAACC;EAAE,CAAC,GAAGZ,SAAS,CAAC,CAAC;EACxB,MAAM;IAACa;EAAI,CAAC,GAAGpB,UAAU,CAACS,OAAO,CAAC;EAClC,MAAMY,SAAS,GAAGb,WAAW,CAAC,CAAC;EAE/B,MAAMc,WAAW,GAAGF,IAAI,CAACG,KAAK,CAACC,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACN,EAAE,IAAIA,EAAE,CAAC;EAEhE,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EAC9C,IAAI,CAAC6B,KAAK,EAAEC,QAAQ,CAAC,GAAG9B,QAAQ,CAACuB,WAAW,CAACQ,KAAK,CAACF,KAAK,CAAC;EACzD,IAAI,CAACG,UAAU,EAAEC,aAAa,CAAC,GAAGjC,QAAQ,CAACuB,WAAW,CAACQ,KAAK,CAACV,IAAI,CAAC;EAElE,MAAMa,IAAI,GAAGA,CAAA,KAAK;IACd;IACA;IACAtB,UAAU,CAAC;MAACQ,EAAE,EAAEC,IAAI,CAACD,EAAE;MAAES,KAAK,EAAEA,KAAK;MAAER,IAAI,EAAEA;IAAI,CAAC,CAAC,CAACc,IAAI,CAACC,IAAI,IAAG;MAC5Dd,SAAS,CAACX,YAAY,CAAC;IAC3B,CAAC,CAAC;EACN,CAAC;EAED,oBACIG,OAAA,CAACV,IAAI;IACDiC,KAAK,EAAE;MAACC,YAAY,EAAE,EAAE;MAAEC,MAAM,EAAE,qBAAqB;MAAEC,WAAW,EAAE;IAAK,CAAE;IAAAC,QAAA,eAE7E3B,OAAA;MAAKuB,KAAK,EAAE;QAACE,MAAM,EAAE;MAAE,CAAE;MAAAE,QAAA,gBACrB3B,OAAA;QAAK4B,SAAS,EAAC,QAAQ;QAACL,KAAK,EAAE;UAACM,YAAY,EAAE;QAAE,CAAE;QAAAF,QAAA,gBAC9C3B,OAAA;UACIuB,KAAK,EAAE;YAACO,UAAU,EAAE,EAAE;YAAEC,QAAQ,EAAE,EAAE;YAAEC,UAAU,EAAE;UAAS,CAAE;UAAAL,QAAA,EAE5Dd,QAAQ,gBACLb,OAAA;YAAA2B,QAAA,GAAIZ,KAAK,EAAC,IAAE;UAAA;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,gBAEhBpC,OAAA,CAACT,IAAI,CAAC8C,OAAO;YACTC,KAAK,EAAEvB,KAAM;YACbwB,QAAQ,EAAEC,CAAC,IAAIxB,QAAQ,CAACwB,CAAC,CAACC,MAAM,CAACH,KAAK;UAAE;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAE9B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAElB,CAAC,eACNpC,OAAA;UAAKuB,KAAK,EAAE;YAACO,UAAU,EAAE;UAAM,CAAE;UAAAH,QAAA,gBAC7B3B,OAAA,CAACX,MAAM;YACHqD,OAAO,EAAC,iBAAiB;YACzBnB,KAAK,EAAE;cAACoB,WAAW,EAAE;YAAE,CAAE;YACzBC,OAAO,EAAEA,CAAA,KAAMxB,IAAI,CAAC,CAAE;YAAAO,QAAA,EACzB;UAED;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTpC,OAAA,CAACP,iBAAiB;YAAEoD,IAAI,EAAC,OAAO;YAACC,IAAI,EAAC,SAAS;YAACC,YAAY,EAAE,CAAE;YAAApB,QAAA,gBAC5D3B,OAAA,CAACR,YAAY;cACTkD,OAAO,EAAC,cAAc;cACtBpC,EAAE,EAAC,aAAa;cAChBgC,KAAK,EAAE,CAAE;cACTM,OAAO,EAAIA,CAAA,KAAK9B,WAAW,CAAC,IAAI,CAAE;cAAAa,QAAA,EACrC;YAED;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAc,CAAC,eACfpC,OAAA,CAACR,YAAY;cACTkD,OAAO,EAAC,cAAc;cACtBpC,EAAE,EAAC,aAAa;cAChBgC,KAAK,EAAE,CAAE;cACTM,OAAO,EAAIA,CAAA,KAAK9B,WAAW,CAAC,KAAK,CAAE;cAAAa,QAAA,EACtC;YAED;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAc,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,EACLvB,QAAQ,gBACLb,OAAA,CAACC,UAAU;QAACC,GAAG,EAAEgB;MAAW;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,gBAE9BpC,OAAA,CAACT,IAAI,CAAC8C,OAAO;QACTC,KAAK,EAAEpB,UAAW;QAClBqB,QAAQ,EAAEC,CAAC,IAAIrB,aAAa,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC7CU,EAAE,EAAC,UAAU;QACbC,IAAI,EAAE;MAAG;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEf,CAAC;AAAC/B,EAAA,CA/EID,UAAU;EAAA,QACCV,SAAS,EAEJC,WAAW;AAAA;AAAAuD,GAAA,GAH3B9C,UAAU;AAiFhB,eAAeA,UAAU;AAAC,IAAAD,EAAA,EAAA+C,GAAA;AAAAC,YAAA,CAAAhD,EAAA;AAAAgD,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}