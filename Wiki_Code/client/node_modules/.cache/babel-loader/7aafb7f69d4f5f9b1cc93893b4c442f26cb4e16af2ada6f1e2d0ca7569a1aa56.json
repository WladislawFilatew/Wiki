{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\nimport Mark from \"./Mark\";\nimport State from \"./State\";\nexport default class TextWiki {\n  constructor() {\n    this._group = [];\n    this._text = [];\n    this._selectedGroup = {};\n    this._selectedUser = {};\n    this._page = 1;\n    this._totalCount = 0;\n    this._limit = 3;\n    makeAutoObservable(this);\n  }\n  setPage(page) {\n    this._page = page;\n  }\n  setTotalCount(count) {\n    this._totalCount = count;\n  }\n  setLimit(limit) {\n    this._limit = limit;\n  }\n  setSelectedGroup(group) {\n    this._page = 1;\n    this._selectedGroup = group;\n  }\n  setSelectedUser(user) {\n    this._page = 1;\n    this._selectedUser = user;\n  }\n  setGroup(group) {\n    this._group = group;\n  }\n  setText(splitText) {\n    const text = splitText.map(temp => temp = {\n      id: temp.id,\n      state: new State(temp.id, temp.title, temp.text),\n      userId: temp.userId,\n      userName: temp.user.fn + ' ' + temp.user.sn,\n      group: {\n        id: temp.groupId,\n        name: temp.group.name\n      },\n      mark: new Mark(temp.mark, false)\n    });\n    this._text = text;\n  }\n  addText(temp, userName, groupName) {\n    const obj = {\n      id: temp.id,\n      state: new State(temp.id, temp.title, temp.text),\n      userId: temp.userId,\n      userName: userName,\n      group: {\n        id: temp.groupId,\n        name: groupName\n      },\n      mark: new Mark(0, false)\n    };\n    this._text.push(obj);\n  }\n  delTextId(id) {\n    this._text = this._text.filter(text => text.id != id);\n  }\n  get groups() {\n    return this._group;\n  }\n  get texts() {\n    return this._text;\n  }\n  get selectedGroup() {\n    return this._selectedGroup;\n  }\n  get selectedUser() {\n    return this._selectedUser;\n  }\n  get page() {\n    return this._page;\n  }\n  get totalCount() {\n    return this._totalCount;\n  }\n  get limit() {\n    return this._limit;\n  }\n}","map":{"version":3,"names":["makeAutoObservable","Mark","State","TextWiki","constructor","_group","_text","_selectedGroup","_selectedUser","_page","_totalCount","_limit","setPage","page","setTotalCount","count","setLimit","limit","setSelectedGroup","group","setSelectedUser","user","setGroup","setText","splitText","text","map","temp","id","state","title","userId","userName","fn","sn","groupId","name","mark","addText","groupName","obj","push","delTextId","filter","groups","texts","selectedGroup","selectedUser","totalCount"],"sources":["C:/Users/fill2/OneDrive/Рабочий стол/Проект Wiki/Wiki/client/src/wiki/TextWiki.js"],"sourcesContent":["import {makeAutoObservable} from \"mobx\"\r\nimport Mark from \"./Mark\"\r\nimport State from \"./State\"\r\n\r\nexport default class TextWiki{\r\n    constructor(){\r\n        this._group = []\r\n        this._text = []\r\n        this._selectedGroup = {};\r\n        this._selectedUser = {};\r\n\r\n        this._page = 1\r\n        this._totalCount = 0\r\n        this._limit = 3\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    setPage(page){\r\n        this._page = page\r\n    }\r\n\r\n    setTotalCount(count){\r\n        this._totalCount = count\r\n    }\r\n\r\n    setLimit(limit){\r\n        this._limit = limit\r\n    }\r\n\r\n    setSelectedGroup(group){\r\n        this._page = 1\r\n        this._selectedGroup = group\r\n    }\r\n\r\n    setSelectedUser(user){\r\n        this._page = 1\r\n        this._selectedUser = user\r\n    }\r\n\r\n    setGroup(group){\r\n        this._group = group\r\n    }\r\n\r\n    setText(splitText){\r\n        const text = splitText.map(temp => temp = \r\n            {id: temp.id, state: new State(temp.id, temp.title, temp.text),\r\n            userId: temp.userId, userName: temp.user.fn + ' ' + temp.user.sn,\r\n            group: {id: temp.groupId, name: temp.group.name}, mark: new Mark(temp.mark,false)}\r\n        )\r\n        this._text = text\r\n    }\r\n\r\n    addText(temp, userName, groupName){\r\n        const obj =  {id: temp.id, state: new State(temp.id, temp.title, temp.text),\r\n            userId: temp.userId, userName: userName,\r\n            group: {id: temp.groupId, name: groupName}, mark: new Mark(0,false)}\r\n        this._text.push(obj)\r\n    }\r\n\r\n    delTextId(id){\r\n        this._text = this._text.filter(text => text.id != id)\r\n    }\r\n\r\n    get groups(){\r\n        return this._group\r\n    }\r\n\r\n    get texts(){\r\n        return this._text\r\n    }\r\n\r\n    get selectedGroup(){\r\n        return this._selectedGroup\r\n    }\r\n\r\n    get selectedUser(){\r\n        return this._selectedUser\r\n    }\r\n\r\n    get page(){\r\n        return this._page\r\n    }\r\n\r\n    get totalCount(){\r\n        return this._totalCount\r\n    }\r\n\r\n    get limit(){\r\n        return this._limit\r\n    }\r\n}"],"mappings":"AAAA,SAAQA,kBAAkB,QAAO,MAAM;AACvC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,KAAK,MAAM,SAAS;AAE3B,eAAe,MAAMC,QAAQ;EACzBC,WAAWA,CAAA,EAAE;IACT,IAAI,CAACC,MAAM,GAAG,EAAE;IAChB,IAAI,CAACC,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,cAAc,GAAG,CAAC,CAAC;IACxB,IAAI,CAACC,aAAa,GAAG,CAAC,CAAC;IAEvB,IAAI,CAACC,KAAK,GAAG,CAAC;IACd,IAAI,CAACC,WAAW,GAAG,CAAC;IACpB,IAAI,CAACC,MAAM,GAAG,CAAC;IACfX,kBAAkB,CAAC,IAAI,CAAC;EAC5B;EAEAY,OAAOA,CAACC,IAAI,EAAC;IACT,IAAI,CAACJ,KAAK,GAAGI,IAAI;EACrB;EAEAC,aAAaA,CAACC,KAAK,EAAC;IAChB,IAAI,CAACL,WAAW,GAAGK,KAAK;EAC5B;EAEAC,QAAQA,CAACC,KAAK,EAAC;IACX,IAAI,CAACN,MAAM,GAAGM,KAAK;EACvB;EAEAC,gBAAgBA,CAACC,KAAK,EAAC;IACnB,IAAI,CAACV,KAAK,GAAG,CAAC;IACd,IAAI,CAACF,cAAc,GAAGY,KAAK;EAC/B;EAEAC,eAAeA,CAACC,IAAI,EAAC;IACjB,IAAI,CAACZ,KAAK,GAAG,CAAC;IACd,IAAI,CAACD,aAAa,GAAGa,IAAI;EAC7B;EAEAC,QAAQA,CAACH,KAAK,EAAC;IACX,IAAI,CAACd,MAAM,GAAGc,KAAK;EACvB;EAEAI,OAAOA,CAACC,SAAS,EAAC;IACd,MAAMC,IAAI,GAAGD,SAAS,CAACE,GAAG,CAACC,IAAI,IAAIA,IAAI,GACnC;MAACC,EAAE,EAAED,IAAI,CAACC,EAAE;MAAEC,KAAK,EAAE,IAAI3B,KAAK,CAACyB,IAAI,CAACC,EAAE,EAAED,IAAI,CAACG,KAAK,EAAEH,IAAI,CAACF,IAAI,CAAC;MAC9DM,MAAM,EAAEJ,IAAI,CAACI,MAAM;MAAEC,QAAQ,EAAEL,IAAI,CAACN,IAAI,CAACY,EAAE,GAAG,GAAG,GAAGN,IAAI,CAACN,IAAI,CAACa,EAAE;MAChEf,KAAK,EAAE;QAACS,EAAE,EAAED,IAAI,CAACQ,OAAO;QAAEC,IAAI,EAAET,IAAI,CAACR,KAAK,CAACiB;MAAI,CAAC;MAAEC,IAAI,EAAE,IAAIpC,IAAI,CAAC0B,IAAI,CAACU,IAAI,EAAC,KAAK;IAAC,CACrF,CAAC;IACD,IAAI,CAAC/B,KAAK,GAAGmB,IAAI;EACrB;EAEAa,OAAOA,CAACX,IAAI,EAAEK,QAAQ,EAAEO,SAAS,EAAC;IAC9B,MAAMC,GAAG,GAAI;MAACZ,EAAE,EAAED,IAAI,CAACC,EAAE;MAAEC,KAAK,EAAE,IAAI3B,KAAK,CAACyB,IAAI,CAACC,EAAE,EAAED,IAAI,CAACG,KAAK,EAAEH,IAAI,CAACF,IAAI,CAAC;MACvEM,MAAM,EAAEJ,IAAI,CAACI,MAAM;MAAEC,QAAQ,EAAEA,QAAQ;MACvCb,KAAK,EAAE;QAACS,EAAE,EAAED,IAAI,CAACQ,OAAO;QAAEC,IAAI,EAAEG;MAAS,CAAC;MAAEF,IAAI,EAAE,IAAIpC,IAAI,CAAC,CAAC,EAAC,KAAK;IAAC,CAAC;IACxE,IAAI,CAACK,KAAK,CAACmC,IAAI,CAACD,GAAG,CAAC;EACxB;EAEAE,SAASA,CAACd,EAAE,EAAC;IACT,IAAI,CAACtB,KAAK,GAAG,IAAI,CAACA,KAAK,CAACqC,MAAM,CAAClB,IAAI,IAAIA,IAAI,CAACG,EAAE,IAAIA,EAAE,CAAC;EACzD;EAEA,IAAIgB,MAAMA,CAAA,EAAE;IACR,OAAO,IAAI,CAACvC,MAAM;EACtB;EAEA,IAAIwC,KAAKA,CAAA,EAAE;IACP,OAAO,IAAI,CAACvC,KAAK;EACrB;EAEA,IAAIwC,aAAaA,CAAA,EAAE;IACf,OAAO,IAAI,CAACvC,cAAc;EAC9B;EAEA,IAAIwC,YAAYA,CAAA,EAAE;IACd,OAAO,IAAI,CAACvC,aAAa;EAC7B;EAEA,IAAIK,IAAIA,CAAA,EAAE;IACN,OAAO,IAAI,CAACJ,KAAK;EACrB;EAEA,IAAIuC,UAAUA,CAAA,EAAE;IACZ,OAAO,IAAI,CAACtC,WAAW;EAC3B;EAEA,IAAIO,KAAKA,CAAA,EAAE;IACP,OAAO,IAAI,CAACN,MAAM;EACtB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}