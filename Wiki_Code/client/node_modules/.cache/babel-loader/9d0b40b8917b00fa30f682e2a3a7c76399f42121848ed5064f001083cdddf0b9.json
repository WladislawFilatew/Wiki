{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fill2\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442 Wiki\\\\Wiki\\\\client\\\\src\\\\pages\\\\WikiRedact.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from \"react\";\nimport parse from 'html-react-parser';\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\nimport { Context } from '../index';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RenderText = ({\n  str\n}) => {\n  return parse(str);\n};\n_c = RenderText;\nconst WikiRedact = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    text\n  } = useContext(Context);\n  const RedactState = text.texts.find(OneText => OneText.id == id);\n  const [isRedact, setIsRedact] = useState(true);\n  let [title, setTitle] = useState(RedactState.state.title);\n  let [redactText, setRedactText] = useState(RedactState.state.text);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      borderRadius: 20,\n      margin: '0px 200px 0px 200px',\n      borderWidth: '5px'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex\",\n        style: {\n          marginBottom: 25\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: 25,\n            fontSize: 25,\n            fontWeight: \"lighter\"\n          },\n          children: isRedact ? /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [title, \": \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(Form.Control, {\n            value: title,\n            onChange: e => setTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: \"auto\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline-success\",\n            style: {\n              marginRight: 10\n            },\n            children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n            type: \"radio\",\n            name: \"options\",\n            defaultValue: 1,\n            children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n              variant: \"outline-dark\",\n              id: \"tbg-radio-1\",\n              value: 1,\n              onClick: () => setIsRedact(true),\n              children: \"\\u041F\\u0440\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n              variant: \"outline-dark\",\n              id: \"tbg-radio-2\",\n              value: 2,\n              onClick: () => setIsRedact(false),\n              children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), isRedact ? /*#__PURE__*/_jsxDEV(RenderText, {\n        str: redactText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Form.Control, {\n        value: redactText,\n        onChange: e => setRedactText(e.target.value),\n        as: \"textarea\",\n        rows: 30\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(WikiRedact, \"JlfPz6GJ7im84t1zQpt09Ihjc3s=\", false, function () {\n  return [useParams];\n});\n_c2 = WikiRedact;\nexport default WikiRedact;\nvar _c, _c2;\n$RefreshReg$(_c, \"RenderText\");\n$RefreshReg$(_c2, \"WikiRedact\");","map":{"version":3,"names":["React","useState","useContext","parse","Button","Card","Form","useParams","Context","ToggleButton","ToggleButtonGroup","jsxDEV","_jsxDEV","RenderText","str","_c","WikiRedact","_s","id","text","RedactState","texts","find","OneText","isRedact","setIsRedact","title","setTitle","state","redactText","setRedactText","style","borderRadius","margin","borderWidth","children","className","marginBottom","marginLeft","fontSize","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","Control","value","onChange","e","target","variant","marginRight","type","name","defaultValue","onClick","as","rows","_c2","$RefreshReg$"],"sources":["C:/Users/fill2/OneDrive/Рабочий стол/Проект Wiki/Wiki/client/src/pages/WikiRedact.js"],"sourcesContent":["import React, { useState , useContext}  from \"react\";\r\nimport parse from 'html-react-parser';\r\nimport { Button, Card, Form } from \"react-bootstrap\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {Context} from '../index';\r\nimport ToggleButton from 'react-bootstrap/ToggleButton';\r\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\r\n\r\n\r\nconst RenderText = ({str}) =>{\r\n    return(\r\n        parse(str)\r\n    )\r\n}\r\n\r\n\r\nconst WikiRedact  = () => {\r\n    const {id} = useParams();\r\n    const {text} = useContext(Context);\r\n\r\n    const RedactState = text.texts.find(OneText => OneText.id == id);\r\n   \r\n    const [isRedact, setIsRedact] = useState(true)\r\n    let [title, setTitle] = useState(RedactState.state.title)\r\n    let [redactText, setRedactText] = useState(RedactState.state.text)\r\n    \r\n\r\n    return (\r\n\r\n        <Card\r\n            style={{borderRadius: 20, margin: '0px 200px 0px 200px', borderWidth: '5px'}}\r\n        >\r\n            <div style={{margin: 20}}>\r\n                <div className=\"d-flex\" style={{marginBottom: 25}}>\r\n                    <div \r\n                        style={{marginLeft: 25, fontSize: 25, fontWeight: \"lighter\"}}\r\n                    >\r\n                        {isRedact?\r\n                            <b>{title}: </b>\r\n                        :\r\n                            <Form.Control\r\n                                value={title}\r\n                                onChange={e => setTitle(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        }   \r\n                    </div>\r\n                    <div style={{marginLeft: \"auto\"}}>\r\n                        <Button variant=\"outline-success\" style={{marginRight: 10}}>\r\n                            Сохранить\r\n                        </Button>\r\n                        <ToggleButtonGroup  type=\"radio\" name=\"options\" defaultValue={1}>\r\n                            <ToggleButton\r\n                                variant=\"outline-dark\"\r\n                                id=\"tbg-radio-1\"\r\n                                value={1}\r\n                                onClick = {()=> setIsRedact(true)}\r\n                            >\r\n                                Просмотр\r\n                            </ToggleButton>\r\n                            <ToggleButton \r\n                                variant=\"outline-dark\"\r\n                                id=\"tbg-radio-2\"\r\n                                value={2}\r\n                                onClick = {()=> setIsRedact(false)}\r\n                            >\r\n                                Редактировать\r\n                            </ToggleButton>\r\n                        </ToggleButtonGroup>\r\n                    </div>\r\n                </div>\r\n                {isRedact?\r\n                    <RenderText str={redactText}/>\r\n                    :\r\n                    <Form.Control\r\n                                value={redactText}\r\n                                onChange={e => setRedactText(e.target.value)}\r\n                                as=\"textarea\" \r\n                                rows={30}\r\n                            >\r\n                    </Form.Control>\r\n                }   \r\n            </div>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default WikiRedact;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}