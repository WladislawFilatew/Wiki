{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fill2\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442 Wiki\\\\Wiki\\\\client\\\\src\\\\pages\\\\WikiRedact.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from \"react\";\nimport parse from 'html-react-parser';\nimport { Button, Card, Image } from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\nimport { Context } from '../index';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RenderText = ({\n  str\n}) => {\n  return parse(str);\n};\n_c = RenderText;\nconst WikiRedact = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    text\n  } = useContext(Context);\n  const index = text.texts.findIndex(OneText => OneText.id == id);\n  let RedactState = text.texts[index];\n  const [isRedact, setIsRedact] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      borderRadius: 20,\n      margin: '0px 200px 0px 200px',\n      borderWidth: '5px'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex\",\n        style: {\n          marginBottom: 25\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: 25,\n            fontSize: 25,\n            fontWeight: \"lighter\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [RedactState.state.title, \": \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n          type: \"radio\",\n          name: \"options\",\n          defaultValue: 1,\n          style: {\n            marginLeft: \"auto\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n            variant: \"outline-dark\",\n            id: \"tbg-radio-1\",\n            value: 1,\n            children: [\"\\u041F\\u0440\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440 onClick = \", () => setIsRedac(tr)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n            variant: \"outline-dark\",\n            id: \"tbg-radio-2\",\n            value: 2,\n            children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), !isRedact ? /*#__PURE__*/_jsxDEV(RenderText, {\n        str: RedactState.state.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this) : RedactState.state.text]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(WikiRedact, \"tBzF8vamHisTHo7jADujrbuG6wU=\", false, function () {\n  return [useParams];\n});\n_c2 = WikiRedact;\nexport default WikiRedact;\nvar _c, _c2;\n$RefreshReg$(_c, \"RenderText\");\n$RefreshReg$(_c2, \"WikiRedact\");","map":{"version":3,"names":["React","useState","useContext","parse","Button","Card","Image","useParams","Context","ToggleButton","ToggleButtonGroup","jsxDEV","_jsxDEV","RenderText","str","_c","WikiRedact","_s","id","text","index","texts","findIndex","OneText","RedactState","isRedact","setIsRedact","style","borderRadius","margin","borderWidth","children","className","marginBottom","marginLeft","fontSize","fontWeight","state","title","fileName","_jsxFileName","lineNumber","columnNumber","type","name","defaultValue","variant","value","setIsRedac","tr","_c2","$RefreshReg$"],"sources":["C:/Users/fill2/OneDrive/Рабочий стол/Проект Wiki/Wiki/client/src/pages/WikiRedact.js"],"sourcesContent":["import React, { useState , useContext}  from \"react\";\r\nimport parse from 'html-react-parser';\r\nimport { Button, Card,Image } from \"react-bootstrap\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {Context} from '../index';\r\nimport ToggleButton from 'react-bootstrap/ToggleButton';\r\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\r\n\r\n\r\nconst RenderText = ({str}) =>{\r\n    return(\r\n        parse(str)\r\n    )\r\n}\r\n\r\n\r\nconst WikiRedact  = () => {\r\n    const {id} = useParams();\r\n    const {text} = useContext(Context);\r\n\r\n    const index = text.texts.findIndex(OneText => OneText.id == id);\r\n    let RedactState = text.texts[index];\r\n   \r\n    const [isRedact, setIsRedact] = useState(false)\r\n    \r\n\r\n    return (\r\n\r\n        <Card\r\n            style={{borderRadius: 20, margin: '0px 200px 0px 200px', borderWidth: '5px'}}\r\n        >\r\n            <div style={{margin: 20}}>\r\n                <div className=\"d-flex\" style={{marginBottom: 25}}>\r\n                    <div \r\n                        style={{marginLeft: 25, fontSize: 25, fontWeight: \"lighter\"}}\r\n                    >\r\n                        <b>{RedactState.state.title}: </b>\r\n                    </div>\r\n                    <ToggleButtonGroup  type=\"radio\" name=\"options\" defaultValue={1} style={{marginLeft: \"auto\"}}>\r\n                        <ToggleButton  variant=\"outline-dark\" id=\"tbg-radio-1\" value={1}>\r\n                            Просмотр\r\n                            onClick = {()=> setIsRedac(tr)}\r\n                        </ToggleButton>\r\n                        <ToggleButton   variant=\"outline-dark\" id=\"tbg-radio-2\" value={2}>\r\n                            Редактировать\r\n                        </ToggleButton>\r\n                    </ToggleButtonGroup>\r\n                </div>\r\n                {!isRedact?\r\n                    <RenderText str={RedactState.state.text}/>\r\n                    :\r\n                    RedactState.state.text\r\n                }   \r\n            </div>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default WikiRedact;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}