{"ast":null,"code":"import { $authHost, $host } from \"./index\";\nexport const createGroup = async group => {\n  const {\n    data\n  } = await $authHost.post('api/group', group);\n  return data;\n};\nexport const fetchGroup = async () => {\n  const {\n    data\n  } = await $host.get('api/group');\n  return data;\n};\nexport const createText = async (title, text, userId, groupId) => {\n  const {\n    data\n  } = await $authHost.post('api/text', {\n    title: title,\n    text: text,\n    userId: userId,\n    groupId: groupId\n  });\n  return data;\n};\nexport const fetchText = async (groupId, userId, page, limit = 3) => {\n  const {\n    data\n  } = await $host.get('api/text', {\n    params: {\n      groupId,\n      page,\n      limit,\n      userId\n    }\n  });\n  return data;\n};\nexport const changeText = async (id, title, text, groupId) => {\n  const {\n    data\n  } = await $authHost.patch('api/text/' + id, {\n    title: title,\n    text: text,\n    groupId: groupId\n  });\n  return data;\n};\nexport const delText = async id => {\n  const {\n    data\n  } = await $host.delete('api/text/' + id);\n  return data;\n};","map":{"version":3,"names":["$authHost","$host","createGroup","group","data","post","fetchGroup","get","createText","title","text","userId","groupId","fetchText","page","limit","params","changeText","id","patch","delText","delete"],"sources":["C:/Users/fill2/OneDrive/Рабочий стол/Проект Wiki/Wiki/client/src/http/textAPI.js"],"sourcesContent":["import {$authHost, $host} from \"./index\";\r\n\r\nexport const createGroup = async (group) => {\r\n    const {data} = await $authHost.post('api/group', group)\r\n    return data\r\n}\r\n\r\nexport const fetchGroup = async () => {\r\n    const {data} = await $host.get('api/group')\r\n    return data\r\n}\r\n\r\nexport const createText = async (title, text, userId, groupId) => {\r\n    const {data} = await $authHost.post('api/text', {title: title, text: text, userId:userId, groupId: groupId})\r\n    return data\r\n}\r\n\r\nexport const fetchText = async (groupId,userId, page,limit = 3) => {\r\n    const {data} = await $host.get('api/text', {params:{\r\n        groupId,page,limit, userId\r\n    }})\r\n    return data\r\n}\r\n\r\nexport const changeText = async (id,title,text, groupId) =>{\r\n    const {data} = await $authHost.patch('api/text/' + id, {title: title, text: text,groupId: groupId})\r\n    return data\r\n}\r\n\r\nexport const delText = async(id) => {\r\n    const {data} = await $host.delete('api/text/' + id)\r\n    return data\r\n}\r\n"],"mappings":"AAAA,SAAQA,SAAS,EAAEC,KAAK,QAAO,SAAS;AAExC,OAAO,MAAMC,WAAW,GAAG,MAAOC,KAAK,IAAK;EACxC,MAAM;IAACC;EAAI,CAAC,GAAG,MAAMJ,SAAS,CAACK,IAAI,CAAC,WAAW,EAAEF,KAAK,CAAC;EACvD,OAAOC,IAAI;AACf,CAAC;AAED,OAAO,MAAME,UAAU,GAAG,MAAAA,CAAA,KAAY;EAClC,MAAM;IAACF;EAAI,CAAC,GAAG,MAAMH,KAAK,CAACM,GAAG,CAAC,WAAW,CAAC;EAC3C,OAAOH,IAAI;AACf,CAAC;AAED,OAAO,MAAMI,UAAU,GAAG,MAAAA,CAAOC,KAAK,EAAEC,IAAI,EAAEC,MAAM,EAAEC,OAAO,KAAK;EAC9D,MAAM;IAACR;EAAI,CAAC,GAAG,MAAMJ,SAAS,CAACK,IAAI,CAAC,UAAU,EAAE;IAACI,KAAK,EAAEA,KAAK;IAAEC,IAAI,EAAEA,IAAI;IAAEC,MAAM,EAACA,MAAM;IAAEC,OAAO,EAAEA;EAAO,CAAC,CAAC;EAC5G,OAAOR,IAAI;AACf,CAAC;AAED,OAAO,MAAMS,SAAS,GAAG,MAAAA,CAAOD,OAAO,EAACD,MAAM,EAAEG,IAAI,EAACC,KAAK,GAAG,CAAC,KAAK;EAC/D,MAAM;IAACX;EAAI,CAAC,GAAG,MAAMH,KAAK,CAACM,GAAG,CAAC,UAAU,EAAE;IAACS,MAAM,EAAC;MAC/CJ,OAAO;MAACE,IAAI;MAACC,KAAK;MAAEJ;IACxB;EAAC,CAAC,CAAC;EACH,OAAOP,IAAI;AACf,CAAC;AAED,OAAO,MAAMa,UAAU,GAAG,MAAAA,CAAOC,EAAE,EAACT,KAAK,EAACC,IAAI,EAAEE,OAAO,KAAI;EACvD,MAAM;IAACR;EAAI,CAAC,GAAG,MAAMJ,SAAS,CAACmB,KAAK,CAAC,WAAW,GAAGD,EAAE,EAAE;IAACT,KAAK,EAAEA,KAAK;IAAEC,IAAI,EAAEA,IAAI;IAACE,OAAO,EAAEA;EAAO,CAAC,CAAC;EACnG,OAAOR,IAAI;AACf,CAAC;AAED,OAAO,MAAMgB,OAAO,GAAG,MAAMF,EAAE,IAAK;EAChC,MAAM;IAACd;EAAI,CAAC,GAAG,MAAMH,KAAK,CAACoB,MAAM,CAAC,WAAW,GAAGH,EAAE,CAAC;EACnD,OAAOd,IAAI;AACf,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}