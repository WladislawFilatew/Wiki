{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fill2\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442 Wiki\\\\Wiki\\\\client\\\\src\\\\pages\\\\WikiRedact.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from \"react\";\nimport parse from 'html-react-parser';\nimport { Button, Card, Form, ToggleButton, ToggleButtonGroup } from \"react-bootstrap\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { Context } from '../index';\nimport { WIKIS_ROUTER } from \"../utils/consts\";\nimport { changeText } from \"../http/textAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RenderText = ({\n  str\n}) => {\n  return parse(str);\n};\n_c = RenderText;\nconst WikiRedact = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    text\n  } = useContext(Context);\n  const navigator = useNavigate();\n  const RedactState = text.texts.find(OneText => OneText.id == id);\n  const [isRedact, setIsRedact] = useState(true);\n  let [title, setTitle] = useState(RedactState.state.title);\n  let [redactText, setRedactText] = useState(RedactState.state.text);\n  const save = () => {\n    changeText(RedactState.id, title, redactText).then(data => {\n      navigator(WIKIS_ROUTER);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mt-1\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(GrupBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 9,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            borderRadius: 20,\n            margin: '0px 200px 0px 200px',\n            borderWidth: '5px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              margin: 20\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex\",\n              style: {\n                marginBottom: 25\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginLeft: 25,\n                  fontSize: 25,\n                  fontWeight: \"lighter\"\n                },\n                children: isRedact ? /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: [title, \": \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 29\n                }, this) : /*#__PURE__*/_jsxDEV(Form.Control, {\n                  value: title,\n                  onChange: e => setTitle(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginLeft: \"auto\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-success\",\n                  style: {\n                    marginRight: 10\n                  },\n                  onClick: () => save(),\n                  children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n                  type: \"radio\",\n                  name: \"options\",\n                  defaultValue: 1,\n                  children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n                    variant: \"outline-dark\",\n                    id: \"tbg-radio-1\",\n                    value: 1,\n                    onClick: () => setIsRedact(true),\n                    children: \"\\u041F\\u0440\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n                    variant: \"outline-dark\",\n                    id: \"tbg-radio-2\",\n                    value: 2,\n                    onClick: () => setIsRedact(false),\n                    children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this), isRedact ? /*#__PURE__*/_jsxDEV(RenderText, {\n              str: redactText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(Form.Control, {\n              value: redactText,\n              onChange: e => setRedactText(e.target.value),\n              as: \"textarea\",\n              rows: 30\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(WikiRedact, \"1DgH61BmPYx5okn9UfFYbMcuk90=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c2 = WikiRedact;\nexport default WikiRedact;\nvar _c, _c2;\n$RefreshReg$(_c, \"RenderText\");\n$RefreshReg$(_c2, \"WikiRedact\");","map":{"version":3,"names":["React","useState","useContext","parse","Button","Card","Form","ToggleButton","ToggleButtonGroup","useParams","useNavigate","Context","WIKIS_ROUTER","changeText","jsxDEV","_jsxDEV","RenderText","str","_c","WikiRedact","_s","id","text","navigator","RedactState","texts","find","OneText","isRedact","setIsRedact","title","setTitle","state","redactText","setRedactText","save","then","data","Container","children","Row","className","Col","md","GrupBar","fileName","_jsxFileName","lineNumber","columnNumber","style","borderRadius","margin","borderWidth","marginBottom","marginLeft","fontSize","fontWeight","Control","value","onChange","e","target","variant","marginRight","onClick","type","name","defaultValue","as","rows","_c2","$RefreshReg$"],"sources":["C:/Users/fill2/OneDrive/Рабочий стол/Проект Wiki/Wiki/client/src/pages/WikiRedact.js"],"sourcesContent":["import React, { useState , useContext}  from \"react\";\r\nimport parse from 'html-react-parser';\r\nimport { Button, Card, Form, ToggleButton, ToggleButtonGroup  } from \"react-bootstrap\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport {Context} from '../index';\r\nimport { WIKIS_ROUTER } from \"../utils/consts\";\r\nimport { changeText } from \"../http/textAPI\";\r\n\r\n\r\nconst RenderText = ({str}) =>{\r\n    return(\r\n        parse(str)\r\n    )\r\n}\r\n\r\n\r\nconst WikiRedact  = () => {\r\n    const {id} = useParams();\r\n    const {text} = useContext(Context);\r\n    const navigator = useNavigate()\r\n\r\n    const RedactState = text.texts.find(OneText => OneText.id == id);\r\n   \r\n    const [isRedact, setIsRedact] = useState(true)\r\n    let [title, setTitle] = useState(RedactState.state.title)\r\n    let [redactText, setRedactText] = useState(RedactState.state.text)\r\n    \r\n    const save = () =>{\r\n        changeText( RedactState.id ,title,  redactText).then(data=> {\r\n            navigator(WIKIS_ROUTER)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row className=\"mt-1\"> \r\n                <Col md = {3}>\r\n                    <GrupBar/>\r\n                </Col>\r\n                <Col md = {9}>\r\n        <Card\r\n            style={{borderRadius: 20, margin: '0px 200px 0px 200px', borderWidth: '5px'}}\r\n        >\r\n            <div style={{margin: 20}}>\r\n                <div className=\"d-flex\" style={{marginBottom: 25}}>\r\n                    <div \r\n                        style={{marginLeft: 25, fontSize: 25, fontWeight: \"lighter\"}}\r\n                    >\r\n                        {isRedact?\r\n                            <b>{title}: </b>\r\n                        :\r\n                            <Form.Control\r\n                                value={title}\r\n                                onChange={e => setTitle(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        }   \r\n                    </div>\r\n                    <div style={{marginLeft: \"auto\"}}>\r\n                        <Button \r\n                            variant=\"outline-success\" \r\n                            style={{marginRight: 10}}\r\n                            onClick={() => save()}\r\n                        >\r\n                            Сохранить\r\n                        </Button>\r\n                        <ToggleButtonGroup  type=\"radio\" name=\"options\" defaultValue={1}>\r\n                            <ToggleButton\r\n                                variant=\"outline-dark\"\r\n                                id=\"tbg-radio-1\"\r\n                                value={1}\r\n                                onClick = {()=> setIsRedact(true)}\r\n                            >\r\n                                Просмотр\r\n                            </ToggleButton>\r\n                            <ToggleButton \r\n                                variant=\"outline-dark\"\r\n                                id=\"tbg-radio-2\"\r\n                                value={2}\r\n                                onClick = {()=> setIsRedact(false)}\r\n                            >\r\n                                Редактировать\r\n                            </ToggleButton>\r\n                        </ToggleButtonGroup>\r\n                    </div>\r\n                </div>\r\n                {isRedact?\r\n                    <RenderText str={redactText}/>\r\n                    :\r\n                    <Form.Control\r\n                        value={redactText}\r\n                        onChange={e => setRedactText(e.target.value)}\r\n                        as=\"textarea\" \r\n                        rows={30}\r\n                    />\r\n                }   \r\n            </div>\r\n        </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default WikiRedact;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}