{"ast":null,"code":"import { $authHost, $host } from \"./index\";\nimport { jwtDecode as jwt_decode } from 'jwt-decode';\nexport const registration = async (email, password) => {\n  const response = await $host.post('api/user/registration', {\n    email,\n    password,\n    role: 'ADMIN'\n  });\n  return response;\n};\nexport const login = async (email, password) => {\n  const response = await $host.post('api/user/login', {\n    email,\n    password\n  });\n  return response;\n};\nexport const check = async () => {\n  const response = await $host.post('api/user/registration');\n  return response;\n};","map":{"version":3,"names":["$authHost","$host","jwtDecode","jwt_decode","registration","email","password","response","post","role","login","check"],"sources":["C:/Users/fill2/OneDrive/Рабочий стол/Проект Wiki/Wiki/client/src/http/userAPI.js"],"sourcesContent":["import { $authHost, $host } from \"./index\";\r\nimport {jwtDecode as jwt_decode} from 'jwt-decode';\r\n\r\nexport const registration = async (email,password) => {\r\n    const response = await $host.post('api/user/registration', {email,password,role: 'ADMIN'})\r\n    return response\r\n}\r\n\r\nexport const login = async (email,password) => {\r\n    const response = await $host.post('api/user/login', {email,password})\r\n    return response\r\n}\r\n\r\nexport const check = async () => {\r\n    const response = await $host.post('api/user/registration')\r\n    return response\r\n}"],"mappings":"AAAA,SAASA,SAAS,EAAEC,KAAK,QAAQ,SAAS;AAC1C,SAAQC,SAAS,IAAIC,UAAU,QAAO,YAAY;AAElD,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAOC,KAAK,EAACC,QAAQ,KAAK;EAClD,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAI,CAAC,uBAAuB,EAAE;IAACH,KAAK;IAACC,QAAQ;IAACG,IAAI,EAAE;EAAO,CAAC,CAAC;EAC1F,OAAOF,QAAQ;AACnB,CAAC;AAED,OAAO,MAAMG,KAAK,GAAG,MAAAA,CAAOL,KAAK,EAACC,QAAQ,KAAK;EAC3C,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAI,CAAC,gBAAgB,EAAE;IAACH,KAAK;IAACC;EAAQ,CAAC,CAAC;EACrE,OAAOC,QAAQ;AACnB,CAAC;AAED,OAAO,MAAMI,KAAK,GAAG,MAAAA,CAAA,KAAY;EAC7B,MAAMJ,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAI,CAAC,uBAAuB,CAAC;EAC1D,OAAOD,QAAQ;AACnB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}